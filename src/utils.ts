import fs from 'fs';
import { now } from 'lodash';
import path from 'node:path';
import prettier from 'prettier';

export const AutogenComment = "/* This file was auto-generated by OpenAPI mirage codegen and should not be changed manually. */";

export type FileToWrite = {
  fileName: string;
  content: string;
};

export async function writeFile(fileToWrite: FileToWrite, outputDir: string): Promise<void> {
  const formattedFile = await format(fileToWrite.content);
  return fs.writeFileSync(path.join(outputDir, fileToWrite.fileName), formattedFile);
}

export function format(input: string, name?: string): Promise<string> {
  return prettier.format(input, {
    semi: true, singleQuote: true, parser: 'typescript', trailingComma: 'none'
  }).then((value: string) => value, (reason: any) => {
    console.error('Error formatting input: ', name, reason);
    return '';
  });
}

export function isPluralOfOtherSchema(name: string, schemaNames: string[]): boolean {
  name = name.toUpperCase();
  if (name.endsWith('S')) {
    console.log(`${name} is plural`);
    if (schemaNames.map(s => s.toUpperCase()).includes(name.slice(0, -1))) {
      console.log(`${name} is plural of other string in list`);
      return true;
    } else return false;
  } else {
    console.debug(`${name} is not plural`);
    return false;
  }
}

export function randomInt(upper?: number, lower?: number) {
  if (upper) {
    if (lower) {
      const diff = upper - lower;
      return Math.floor(Math.random() * diff) + lower;
    }
    return Math.floor(Math.random() * upper);
  }
  return Math.floor(Math.random() * 100000);
}

/**
 * If only `from` is passed, returns a date in range: (from) <-> (now)
 * If neither is passed, returns date in range: (now - 5yrs) <-> (now + 5 years)
 * @param from Date - start of date range
 * @param to Date - end of date range
 * @returns Date
 */
export function randomDate(from?: Date, to?: Date) {
  const FIVE_YEARS_MS = 1.578e+11;
  const NOW = Date.now();
  let fromMs;
  let toMs;
  if (from) {
    fromMs = from.valueOf();
    if (to) {
      toMs = to.valueOf();
    } else {
      toMs = NOW.valueOf();
    }
  }
  fromMs = NOW - FIVE_YEARS_MS;
  toMs = NOW + FIVE_YEARS_MS;
  const range = toMs - fromMs;
  const dateMs = Math.floor(Math.random() * range) + fromMs;
  return new Date(dateMs);
}

export function randomAlpha3CountryCode() {
  const codes = ['USA', 'GBR', 'IND', 'SGP'];
  const n = Math.floor(Math.random() * codes.length);
  return codes[n];
}